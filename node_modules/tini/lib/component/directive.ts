type DirectiveRegister = (directive: Directive) => void;

interface DirectiveOptions<T = any> {
    targetNode: Element | HTMLElement;
    componentNode: Element | HTMLElement;
    attribute: Attr;
    expression: string | null;
    paths: string[];
}

export interface Directive<T = any> {
    attribute: string | ((attr: Attr) => any);
    process: (options: DirectiveOptions<T>) => Function|void;
    registerAsGlobal?: (register: DirectiveRegister|undefined) => void;
}